packages:
    yum:
        git: []
        gcc: []
        make: []
        openssl-devel: []
commands:
  00-add-home-variable:
    command: sed -i 's/function error_exit/export HOME=\/root\n\nfunction error_exit/' /opt/elasticbeanstalk/hooks/appdeploy/pre/50npm.sh
container_commands:
  00-install-grunt:
    command: $NODE_HOME/bin/npm install -g grunt-cli
  10-run-grunt:
    command: $NODE_HOME/bin/node $NODE_HOME/bin/grunt build
files:
  "/tmp/app.yaml":
    mode: "000444"
    content: |
        staging:
            AWS_REGION: "`{"Ref" : "AWS::Region"}`"
            DYNAMODB_TABLE_SERVICES: "`{"Ref" : "ServicesTable"}`"
            DYNAMODB_TABLE_USERS: "`{"Ref" : "UsersTable"}`"
            DYNAMODB_TABLE_SONGS: "`{"Ref" : "UsersTable"}`"
option_settings:
    # Node
    - namespace: aws:elasticbeanstalk:container:nodejs
      option_name: NodeCommand
      value: "node ./dist/src/main.js api"
    # Elastic Load Balancer
    - namespace: aws:elb:loadbalancer
      option_name: LoadBalancerHTTPSPort
      value: 443
    - namespace: aws:elb:loadbalancer
      option_name: SSLCertificateId
      value: arn:aws:iam::711231113371:server-certificate/dropplayer
    # Autoscaling
    - namespace: aws:autoscaling:launchconfiguration
      option_name: IamInstanceProfile
      value: drop-ec2-role
    # Enviroment Variables
    - namespace: aws:elasticbeanstalk:application:environment
      option_name: NODE_ENV
      value: staging
    - namespace: aws:elasticbeanstalk:application:environment
      option_name: DROP_CONFIG
      value: "/tmp/app.yaml"
    # Dynamo Db Options
    - namespace: aws:elasticbeanstalk:customoption
      option_name: ServicesHashName
      value: serviceId
    - namespace: aws:elasticbeanstalk:customoption
      option_name: ServicesHashType
      value: S
    - namespace: aws:elasticbeanstalk:customoption
      option_name: ServicesReadCapacityUnits
      value: 1
    - namespace: aws:elasticbeanstalk:customoption
      option_name: ServicesWriteCapacityUnits
      value: 1
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsHashName
      value: userId
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsHashType
      value: S
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsRangeName
      value: songId
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsRangeType
      value: S
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsReadCapacityUnits
      value: 1
    - namespace: aws:elasticbeanstalk:customoption
      option_name: SongsWriteCapacityUnits
      value: 1
    - namespace: aws:elasticbeanstalk:customoption
      option_name: UsersHashName
      value: userId
    - namespace: aws:elasticbeanstalk:customoption
      option_name: UsersHashType
      value: S
    - namespace: aws:elasticbeanstalk:customoption
      option_name: UsersReadCapacityUnits
      value: 1
    - namespace: aws:elasticbeanstalk:customoption
      option_name: UsersWriteCapacityUnits
      value: 1
Resources:
  ServicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        HashKeyElement:
          AttributeName:
            Fn::GetOptionSetting:
              OptionName : ServicesHashName
              DefaultValue: "serviceId"
          AttributeType:
            Fn::GetOptionSetting:
              OptionName : ServicesHashType
              DefaultValue: "S"
      ProvisionedThroughput:
        ReadCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : ServicesReadCapacityUnits
              DefaultValue: 1
        WriteCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : ServicesWriteCapacityUnits
              DefaultValue: 1
  SongsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        HashKeyElement:
          AttributeName:
            Fn::GetOptionSetting:
              OptionName : SongsHashName
              DefaultValue: "userId"
          AttributeType:
            Fn::GetOptionSetting:
              OptionName : SongsHashType
              DefaultValue: "S"
        RangeKeyElement:
          AttributeName:
            Fn::GetOptionSetting:
              OptionName : SongsRangeName
              DefaultValue: "songId"
          AttributeType:
            Fn::GetOptionSetting:
              OptionName : SongsRangeType
              DefaultValue: "S"
      ProvisionedThroughput:
        ReadCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : SongsReadCapacityUnits
              DefaultValue: 1
        WriteCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : SongsWriteCapacityUnits
              DefaultValue: 1
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        HashKeyElement:
          AttributeName:
            Fn::GetOptionSetting:
              OptionName : UsersHashName
              DefaultValue: "userId"
          AttributeType:
            Fn::GetOptionSetting:
              OptionName : UsersHashType
              DefaultValue: "S"
      ProvisionedThroughput:
        ReadCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : UsersReadCapacityUnits
              DefaultValue: 1
        WriteCapacityUnits:
          Fn::GetOptionSetting:
              OptionName : UsersWriteCapacityUnits
              DefaultValue: 1